import prioritizer from"./prioritizer.js";import validator from"./validator.js";import scanner from"./scanner.js";import{approvedArray}from"./utils.js";import renderError from"./errorRenderer.js";let form,forms=[],multiConnect=!1;const vulture={connect:r=>{form=document.getElementById(r)||document.querySelector(`.${r}`);let e=Array.from(form.children).filter((r=>("INPUT"===r.tagName||"TEXTAREA"===r.tagName)&&!["submit","reset"].includes(r.type))).length;form?console.log(`Connected to ${form.id||form.className}, fields (${e}) \nVisit https://vulturejs.github.io`):console.error(`Form ID error: MultiConnect reduired Form ID,\nForm index: ${forms.length+1} has no ID or Form IDs are more than forms.`)},multiConnect:r=>{let e=!1;for(const o of r){const t=document.getElementById(o);if(t?forms.push(t):(console.error(`Form ID error: MultiConnect reduired Form ID,\nForm index: ${forms.length+1} has no ID or Form IDs are more than forms.`),e=!0),e=!1,forms.length===r.length)break}multiConnect=!0,approvedArray(r)&&e&&console.log(`Connected to ${forms.map((r=>r.id)).join(", ")}\nVisit https://vulturejs.github.io`)},talon:({strict:r,augment:e,render_error:o=!0})=>{r||(r=!1),e||(e=null);const{scannedFields:t,errorBoxes:n}=scanner(form),{priority:i,non_priority:s}=prioritizer(t,{strict:r,augment:e}),{fields:m,errors:l}=validator(i,r);if(o&&renderError(n,l),approvedArray(l)||!approvedArray(m))return{errors:l};return{fields:[...new Set([...m,...s])]}},talonAll:(r,{strict:e,augment:o,render_error:t=!0})=>{e||(e=!1),o||(o=null),multiConnect&&(form=forms[r]);const{scannedFields:n,errorBoxes:i}=scanner(form),{priority:s,non_priority:m}=prioritizer(n,{strict:e,augment:o}),{fields:l,errors:a}=validator(s,e);if(t&&renderError(i,a),approvedArray(a)||!approvedArray(l))return{errors:a};return{formId:form.id,fields:[...new Set([...l,...m])]}},formatter:r=>{let e={};return r.forEach((r=>{e[r.name]=r.value})),e}};export default vulture;